#!/usr/bin/env python

"""Download the ``vncts`` file containing the EOS VNC configuration from one of
the EOS machines.
"""

import sys
import os
import argparse

import fabric
from fabric.api import env, execute, get
from fabric.network import disconnect_all

# TODO: Probably best to have a fallback in case eos01 is down.
env.hosts = ['eos01.cis.gvsu.edu']
# skip_bad_hosts and parallel are, unfortunately, mutually exclusive. Don't
# see why they have to be, but that's the way it is.
env.skip_bad_hosts = True
# Use the SSH config file to determine username, etc.
env.use_ssh_config = True

def download_vncts(output_file):
    results = get(
        remote_path='/etc/xinetd.d/vncts',
        # local_path can be a file-like object.
        local_path=output_file)
    if results.failed:
        raise Exception('File download failed.')

def main(argv):
    # Parse args.
    arg_parser = argparse.ArgumentParser(
        prog=argv[0],
        description="Download the 'vncts' file containing the EOS VNC "
        'configuration from one of the EOS machines.')
    arg_parser.add_argument(
        'output_file', type=argparse.FileType('w'),
        help='output file')
    args = arg_parser.parse_args(argv[1:])
    output_file = args.output_file

    # Get the file.
    try:
        # Can't call get directly; must use execute().
        execute(download_vncts, output_file)
    finally:
        disconnect_all()

    return 0

if __name__ == '__main__':
    raise SystemExit(main(sys.argv))
