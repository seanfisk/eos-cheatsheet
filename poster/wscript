# -*- mode: python; coding: utf-8; -*-

import glob
import os
from os.path import join

UBUNTU_FONTS_PATH = join('fonts', 'Ubuntu')

def options(ctx):
    ctx.load('tex')

def configure(ctx):
    # Pygments is a minted requirement.
    ctx.find_program('pygmentize')
    ctx.env.append_unique('PDFLATEXFLAGS', [
        # Enable SyncTeX.
        '-synctex=1',
        # Shell escape; needed by minted.
        '-shell-escape',
    ])


def build(ctx):
    sty_in_node = ctx.path.find_resource('beamerthemeEOS.sty.in')
    sty_out_node = sty_in_node.change_ext(ext='.sty', ext_in='.sty.in')
    # Before we used Waf, we ran our TeX program in the source directory. Waf
    # runs it in the build directory and uses the TEXINPUTS environment
    # variable to point the TeX program to the sources. Images and TeX files
    # seem to do OK with this, but fonts and minted external files don't. The
    # fonts have always been a bit finicky, so we substitute the absolute paths
    # in to avoid any issues. We've moved the minted external files into the
    # TeX source files themselves. Not elegant, but it works.
    ctx(features='subst',
        target=sty_out_node,
        source=sty_in_node,
        UBUNTU_FONT_PATH=(
            # Add a trailing path separator so that LaTeX knows it's a
            # directory.
            ctx.path.find_dir(UBUNTU_FONTS_PATH).abspath() + os.sep),
    )

    # Include the common inter-EOS file.
    inter_eos_ssh_tex_in_node = ctx.path.find_resource([
        'blocks', 'inter-eos-ssh.tex.in'])
    inter_eos_ssh_tex_node = inter_eos_ssh_tex_in_node.change_ext(
        ext='.tex', ext_in='.tex.in')
    inter_eos_ssh_bash_node = ctx.srcnode.find_resource([
        'common', 'inter-eos-ssh.bash'])
    ctx(features='subst',
        target=inter_eos_ssh_tex_node,
        source=inter_eos_ssh_tex_in_node,
        INTER_EOS_SSH_BASH_PATH=inter_eos_ssh_bash_node.abspath())

    # Make sure the style file is built before TeX is run.
    ctx.add_group()

    # Add the vendor directory to the TeX search path so that our vendored
    # packages can be found.
    ctx.env.TEXINPUTS = ctx.path.find_dir('vendor').abspath()

    main_tex_node = ctx.path.find_resource('mastering-eos.tex')
    ctx(features='tex',
        type='pdflatex',
        source=main_tex_node,
        outs='pdf',
        # The tex scanner finds all of TeX files in the blocks/ directory
        # automatically. However, we need to manually include all filenames
        # that aren't autodetected (these shouldn't include Node s).
        deps=(
            glob.glob(join(UBUNTU_FONTS_PATH, '*.ttf')) +
            glob.glob('code/*.bash')
          ),
        # prompt=0 enables batch mode, which disables the avalanche of output
        # normally produced by LaTeX.
        prompt=0,
    )

    ctx.add_manual_dependency(main_tex_node, sty_out_node)
